<!DOCTYPE html>
<html>
    <head>
        <link href='/css/roboto.css' rel="stylesheet" type="text/css">
        <link href='/css/icons.css' rel="stylesheet" type="text/css">
        <link href="/css/vuetify.min.css" rel="stylesheet">
        <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, minimal-ui">
    </head>
    <body>
        <div id="app">
            <v-app dark id="inspire">
                <v-navigation-drawer
                fixed
                :clipped="$vuetify.breakpoint.mdAndUp"
                app
                v-model="drawer"
                class="secondary"
                >
                    <v-list>
                        <v-list-group
                        v-model="item.active"
                        v-for="item in navitems"
                        :key="item.title"
                        :prepend-icon="item.action"
                        no-action
                        >
                        <v-list-tile slot="activator">
                            <v-list-tile-content>
                            <v-list-tile-title>{{ item.title }}</v-list-tile-title>
                            </v-list-tile-content>
                        </v-list-tile>
                        <v-list-tile v-for="subItem in item.navitems" :key="subItem.title" @click="switchComponent(subItem.href)">
                            <v-list-tile-content>
                            <v-list-tile-title>{{ subItem.title }}</v-list-tile-title>
                            </v-list-tile-content>
                            <v-list-tile-action>
                            <v-icon>{{ subItem.action }}</v-icon>
                            </v-list-tile-action>
                        </v-list-tile>
                        </v-list-group>
                    </v-list>
                </v-navigation-drawer>
                <v-toolbar
                color="primary"
                dark
                app
                :clipped-left="$vuetify.breakpoint.mdAndUp"
                fixed
                >
                    <v-toolbar-title style="width: 300px" class="ml-0 pl-3">
                        <v-toolbar-side-icon @click.stop="drawer = !drawer"></v-toolbar-side-icon>
                        <span class="hidden-sm-and-down">
                            <v-btn flat large>
                                <v-avatar size="92px" tile>
                                <img
                                    src="/images/POTLOGOWHITE.svg"
                                    alt="Process Of Things"
                                >
                                </v-avatar>
                            </v-btn>
                        </span>
                    </v-toolbar-title>
                    <v-text-field
                        flat
                        solo-inverted
                        prepend-icon="search"
                        label="Search"
                        class="hidden-sm-and-down"
                    ></v-text-field>
                    <v-spacer></v-spacer>
                    <v-btn icon>
                        <v-icon>apps</v-icon>
                    </v-btn>
                    <v-btn icon>
                        <v-icon>notifications</v-icon>
                    </v-btn>
                </v-toolbar>
                <v-content>
                       
                        <component :is="currentView" keep-alive></component>
   
                </v-content>
            </v-app>
        </div>

        <script src="/js/vue-2.5.16.js"></script>
        <script src="/js/vuetify.js"></script>
        <script src="/js/http-vue-loader.js"></script>
        <script src="/js/vuex-2.0.0.js"></script>
        
        <script>

            const theme = {
                primary: '#2d325a',
                secondary: '#304b78',
                accent: '#56bda2',
                error: '#dbb13b',
                warning: '#dbb13b'
            }
 
 				const indexPage = {
					state: {
						count: 0,
						loadedNavitems: [{"action":"code","navitems":[{"title":"Create App"},{"title":"Your Apps"}],"title":"Developer"},{"action":"explore","navitems":[{"href":"explore","title":"Blockchains"},{"href":"my-component","title":"Node"},{"title":"Permissions"},{"title":"View Stream"}],"title":"Explore"}]
					},
					mutations: {},
					actions: {},
					getters: {
						loadedNavitems (state) {
							return state.loadedNavitems
						}
					}
				}
 
            const store = new Vuex.Store({
					modules: {
						layout: indexPage
					}
				})
				
				    
            new Vue({ 
                el: '#app',
                data: {
                    currentView: "mainPage",
                    drawer: null,
                },
                store,
                computed: {
						navitems () {
							return this.$store.getters.loadedNavitems 
						}
                },
                components: {
                    mainPage: { template: "<div>Main page</div>" },                   
                    explore: httpVueLoader('/vue/explore.vue'),
                    'my-component': httpVueLoader('http://127.0.0.1:8080/ipfs/QmRNppixRR63hsWhc4ZKiFzu4ZYSupgLpWhMmJeUTSz9d3/my-component.vue')
                },
                methods: {
                    switchComponent: function(compName){
                        console.log(compName);
                        this.currentView = compName;
                        this.dialog = true;
                    }
                },
                created() {
                    this.$vuetify.theme = theme
//                    fetch('/api')
//                    .then(response => response.json())
//                    .then(json => {
//                        this.navitems = json.navitems
//                    })
                },
                props: {
                    source: String
                }
            })

        </script>
    </body>
</html>
